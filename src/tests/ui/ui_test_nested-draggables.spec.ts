// Generated by Skyramp v0.5.0.72bbbd01 on 2025-10-30 14:11:30.930063 -0700 PDT m=+2977.794152751
// Command: skyramp generate ui rest \
// 		--framework playwright \
// 		--language typescript \
// 		--output ui_test_nested-draggables.spec.ts \
// 		--output-dir /Users/syedsky/Skyramp/projects/Atlassian/DNDTests/workingDir \
// 		--overwrite true \
// 		--playwright-trace /Users/syedsky/Skyramp/projects/Atlassian/DNDTests/workingDir/skyramp_playwright.zip \
// 		--rawTrace true \

// Import of required libraries
import { test } from '@playwright/test';
import { expect, getValue, newSkyrampPlaywrightPage } from '@skyramp/skyramp';

const pageTimeout = 15000;

async function loginToApplication(page: any, email: string, password: string) {
    await page.getByRole("textbox", { name: "Email" }).click();
    const playwrightRequest0: Record<string, any> = {
        "email": email,
        "password": password
    };

    await page.getByRole("textbox", { name: "Email" }).fill(getValue(playwrightRequest0, "email"));
    await page.getByRole("textbox", { name: "Password" }).click();
    await page.getByRole("textbox", { name: "Password" }).fill(getValue(playwrightRequest0, "password"));
    // Wait to finish any potential hydration
    await page.waitForTimeout(1500);
    const responsePromise0 = page.waitForResponse("**/api/auth/signin**");
    await page.getByRole("button", { name: "Log In" }).click();
    const response0 = await responsePromise0;
}

async function resetDatabase(page: any) {
    await page.getByRole("button", { name: "Profile" }).click();
    const responsePromise1 = page.waitForResponse("**/api/admin/reset**");
    await page.getByTestId("reset-database-button").click();
    const response1 = await responsePromise1;
}

async function dragProjectCard(page: any, sourceCardId: string, targetCardId: string, sourceX: number, sourceY: number, targetX: number, targetY: number) {
    await page.getByTestId(sourceCardId).dragTo(
            page.getByTestId(targetCardId, { exact: true }),
            {
                sourcePosition: { x: sourceX, y: sourceY },
                targetPosition: { x: targetX, y: targetY }
            }
        );
}

test('testUi', async ({ page }) => {
    test.setTimeout(60000);
    // set default timeout for all locator/page actions in this test
    page.setDefaultTimeout(pageTimeout);

    // wrap playwright page with Skyramp page
    page = newSkyrampPlaywrightPage(page);

    await page.goto("http://localhost:5173/");
    await loginToApplication(page, "demo@example.com", "password123");

    await resetDatabase(page);

    await page.getByRole("button", { name: "My Tasks" }).click();
    await page.getByRole("button", { name: "Projects" }).click();
    await expect(page.getByTestId("projects-card-order-2")).toContainText("2");
    await dragProjectCard(page, "projects-card-2", "projects-card-1", 289, 22, 0, 49);
    await expect(page.getByTestId("projects-card-order-2")).toContainText("1");
    await expect(page.getByTestId("projects-card-1")).toContainText("3");
    await dragProjectCard(page, "abbreviated-task-card-5", "projects-card-1", 146, 50, 269, 224);
    await expect(page.getByTestId("projects-card-1")).toContainText("4");
});
